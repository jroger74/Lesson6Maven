abstract class Animal {

    protected String name;

    protected final int runLenght = 0;
    protected final int swimLenght = 0;

    abstract void run(int runLenght);
    abstract void swim(int swimLenght);

   }

class Cat extends Animal {
    private final int runLenghtMax = 200;
    private final int swimLenghtMax = 0;

    @Override
    void run(int runLenght) {
        if ((runLenght >= 0) && (runLenght <= runLenghtMax)) System.out.println(name + " run " + runLenght + "m");
        else System.out.println(name + " run " + runLenghtMax + "m");
    }

    @Override
    void swim(int swimLenght) {
        System.out.println(name + " can't swim");
    }

}

class Dog extends Animal {
    private final int runLenghtMax = 500;
    private final int swimLenghtMax = 10;


    @Override
    void run(int runLenght) {
        if ((runLenght >= 0) && (runLenght <= runLenghtMax)) System.out.println(name + " run " + runLenght + "m");
        else System.out.println(name + " run " + runLenghtMax + "m");
    }

    @Override
    void swim(int swimLenght) {
        if ((swimLenght >= 0) && (swimLenght <= swimLenghtMax)) System.out.println(name + " swim " + swimLenght + "m");
        else System.out.println(name + " swim " + swimLenghtMax + "m");
    }

    public static class NewClass {
        public static void main(String[] args) {
            Cat cat = new Cat();
            cat.run(199);
            cat.swim(0);

            Dog dog = new Dog();
            dog.run(499);
            dog.swim(10);
           }
    }


}
